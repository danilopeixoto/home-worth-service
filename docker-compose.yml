version: '3.5'

services:
  server:
    build: server/
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    environment:
      - SERVER_HOSTNAME
      - SERVER_PORT
      - API_HOSTNAME
      - API_PORT
    networks:
      - lambda
    depends_on:
      - api
    restart: unless-stopped
  api:
    build: api/
    expose:
      - '${API_PORT}'
    environment:
      - API_PORT
      - API_VERSION
      - DATABASE_HOSTNAME
      - DATABASE_PORT
      - DATABASE_NAME
      - DATABASE_USERNAME_FILE
      - DATABASE_PASSWORD_FILE
    secrets:
      - database_username
      - database_password
    networks:
      lambda:
        aliases:
          - ${API_HOSTNAME}
    depends_on:
      - database
    restart: unless-stopped
  database:
    image: postgres:13.2
    expose:
      - '${DATABASE_PORT}'
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER_FILE=${DATABASE_USERNAME_FILE}
      - POSTGRES_PASSWORD_FILE=${DATABASE_PASSWORD_FILE}
    secrets:
      - database_username
      - database_password
    volumes:
      - database:/var/lib/postgresql/data/
    networks:
      lambda:
        aliases:
          - ${DATABASE_HOSTNAME}
    command: postgres --port=${DATABASE_PORT}
    restart: unless-stopped

secrets:
  database_username:
    file: 'secrets/database_username'
  database_password:
    file: 'secrets/database_password'

volumes:
  database:

networks:
  lambda:
